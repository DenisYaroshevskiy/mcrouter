/*
 *  Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */
#pragma once

#include <array>

#include <folly/Range.h>
#include <folly/dynamic.h>

namespace carbon {
namespace test {
namespace B {

struct BRouterStatsConfig {
  static constexpr size_t kNumRequestGroups = 1;
  static constexpr std::array<folly::StringPiece, 1 * kNumRequestGroups>
      sumStatNames{{folly::StringPiece("cmd_testB_count")}};
  static constexpr std::array<folly::StringPiece, 3 * kNumRequestGroups>
      rateStatNames{{folly::StringPiece("cmd_testB"),
                     folly::StringPiece("cmd_testB_out"),
                     folly::StringPiece("cmd_testB_out_all")}};

  template <class Request>
  static constexpr size_t getStatGroup();
};

template <>
inline constexpr size_t
BRouterStatsConfig::getStatGroup<TestBRequest>() {
  return 0; // stat group 'testB'
}
} // namespace B
} // namespace test
} // namespace carbon
